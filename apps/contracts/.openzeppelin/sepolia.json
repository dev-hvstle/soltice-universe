{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x58d236825fA510F9C34494c4f23E8834614E6581",
    "txHash": "0x69683285eca245bdb1ce122791e9bf4ea4a271e276fbcd8b4da522346436f91f"
  },
  "proxies": [
    {
      "address": "0x66AdFe253Ae60b7f82128152316d54d6CEb9a64c",
      "txHash": "0x74544cfc29c0310d9d5401e13960ca417c911afb9ab68116a25bfca219e75d0d",
      "kind": "transparent"
    },
    {
      "address": "0x434FA2f1261489Ff38E90E94dc279f703A961780",
      "txHash": "0x4010cb25fd47ea7d3e78e63a8963dfdc22417a24a6c30a60e083053dd05b5ee2",
      "kind": "transparent"
    },
    {
      "address": "0xB6039be5773A51a07E54b6CD5EA70ba2D03c958f",
      "txHash": "0x615b0361ed9ea3631018b899cae22a0d8045f889f98f9d0e40e1a04d166974a5",
      "kind": "transparent"
    },
    {
      "address": "0xbcc9F7E989aE209d611fAb5d3A05e8795F224cD2",
      "txHash": "0x6c3c961e3badc830e13f766034ac5fe0728384a678f5459acf7a65b74a2decb9",
      "kind": "transparent"
    },
    {
      "address": "0x91d3100E6Ef656FCB9ecEe9f9ac3Ca2DDC1910e3",
      "txHash": "0x07ea514b7d93e023f9f267a67ed4778fae5fe992ed0ad5f2452639749b4e803a",
      "kind": "transparent"
    },
    {
      "address": "0x798b46261E010c02F481Aa5f8e23f95B57eeE9Ea",
      "txHash": "0x7f8f1b7c704e30f9a61a94746da8475d5682b038e9534a7b89a2bffeb44cd3ab",
      "kind": "transparent"
    },
    {
      "address": "0x557558Ccb0B3F601Be541D19cC96626ba3F64a3B",
      "txHash": "0x016b836ed9477b67fd7949fe474840514f394d08681617f5bef1bbb016133d7b",
      "kind": "transparent"
    },
    {
      "address": "0x5Dd2219d636Ac3f462365098980Ee68CA22e5F86",
      "txHash": "0x17c1b6ec5148fadd25f8362d673a73bfeeeedc5d96450243cfbd49f8bdc356cc",
      "kind": "transparent"
    },
    {
      "address": "0x206643f0a6e65D4155b45E1c553005Fad174d867",
      "txHash": "0x98c5c8bf3d0019c3ba6e019931e762340fbe4f1ff7d547644b967f4799d863c4",
      "kind": "transparent"
    },
    {
      "address": "0x0a638787275Fa06752212f5F22922a7861f1B330",
      "txHash": "0x86c1548c4cfbd2e42c91bfb719ab965c6b2e14a6574c512ffda2985503aba1bd",
      "kind": "transparent"
    },
    {
      "address": "0xCe464379aA84159549ca0eebBb555c741C521053",
      "txHash": "0x62ddc64b81a400d4ec11fe391eb546337043e6b1dd0c9724fd9cd9568dfa0405",
      "kind": "transparent"
    },
    {
      "address": "0x6D9a9a7b347273AacF26099D9fDc4130c08E4b1E",
      "txHash": "0x1e00992bc7b4624c404c86cf495128258a9457f76b71b3c1ff3e712f33462fbf",
      "kind": "transparent"
    }
  ],
  "impls": {
    "83542f980d4374e8ef4723737e9c0d410db00f3e15c4e32c020403dcf4d55ed0": {
      "address": "0x958FfA1a44fbFB1f7e8cd394535B46cCE3a98e11",
      "txHash": "0xe904a120d65e8cb7388cd54e96562acca4ba783e10d9195fe20f18c520f5ce07",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "addressRegistry",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1b68ef0e1e530176581cce172c144620748faad1dea3439be0576632089d8bfe": {
      "address": "0x725b72a94dbEa84ed015731e456701e61D29663E",
      "txHash": "0x4e9f7fe9abb516895b27d1b3eaa0e8b48d5c33c08f3bcf61f1376ddfa5c64b2d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Tax)5152_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:10"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:11"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:12"
          },
          {
            "label": "isSupportedDex",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)167_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Tax)5152_storage": {
            "label": "struct ITimePotion.Tax",
            "members": [
              {
                "label": "team",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dev",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isOn",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "25a97beb510e1596ef56396752dcc7f8d7d7d99ce1bff2109cd085f59ba75690": {
      "address": "0x2256316956cd437eF0C56586135E54f2414bC575",
      "txHash": "0x08709d7fb0566eb8e3549bcb10386484027fae52543d5959d4af98aa0f026862",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Tax)5136_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:10"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:11"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:12"
          },
          {
            "label": "isSupportedDex",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)167_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Tax)5136_storage": {
            "label": "struct ITimePotion.Tax",
            "members": [
              {
                "label": "team",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dev",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isOn",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "670e1bb6c81ec0163e8a92e064e1554a456ac4347c3877d585fa49cff25c23a4": {
      "address": "0xC929Be8B7fdcaAC7eB71D7d3E0EdAf7013cB4dC4",
      "txHash": "0x79a06e2a9fa7934abfabb27212ae61ec59b23619eec99bb5d1f0bee857a69d4f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Tax)5128_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:10"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:11"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:12"
          },
          {
            "label": "isSupportedDex",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)167_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Tax)5128_storage": {
            "label": "struct ITimePotion.Tax",
            "members": [
              {
                "label": "team",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dev",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isOn",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6456c0446e44d91467bdf61df4f2b7c915bf7ab83e4498721421089bdcdec84": {
      "address": "0xdc6e2ee1F3B34769CcD75bcd7DC7901261A6E739",
      "txHash": "0x75792586c40aaaa3038d62d2753f7b737cc4c62fddaa7ed49c675311bb060bb7",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Tax)5152_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:10"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:11"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:12"
          },
          {
            "label": "isSupportedDex",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)167_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Tax)5152_storage": {
            "label": "struct ITimePotion.Tax",
            "members": [
              {
                "label": "team",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dev",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isOn",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d35292c23990a653a6f3fb147bfa9720a08d440f285abda993d1fa782cfccb46": {
      "address": "0x3E934Ac65cA8cD60f13203ee0Ce4ae6c20991eF5",
      "txHash": "0xfe6b8223cc74d92e36b088e4b325096a642102f669fdfb2a38b6680e577a2b55",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Tax)5144_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:10"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:11"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:12"
          },
          {
            "label": "isSupportedDex",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TimePotion",
            "src": "contracts/TimePotion.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)167_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Tax)5144_storage": {
            "label": "struct ITimePotion.Tax",
            "members": [
              {
                "label": "team",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dev",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isOn",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "73d5bc362e6a222a0318461bdaaa1168e6a9f3c84aa4a2fd89b0d90b84154e37": {
      "address": "0x31fB8Ce005929cD2524c1Bf0115DD2Ea25028F2d",
      "txHash": "0xbd2119039a59daced2857e06779f0cf2ef738cee3c3502200788d55b1a420b53",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)167_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4c3674ac6dfaab826110ca38128bc9c67bee9bf5916a8a5996bf32cc8a30e787": {
      "address": "0x8b59716938e0EC080A1f2c455fA7026bb7A7a408",
      "txHash": "0x286bfac7d55d43d19bdb8bd97efea503069845d2d0efd39e0eb52805e1f7cd91",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)5850_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)5833,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)5833,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)5845_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)5833": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)5833,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)5833,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)5845_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)5845_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)5833",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)5850_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0d60518d27aa1265de5f7caf1fee1260a637e7862cd27598a6fe2e30d9e40f76": {
      "address": "0x9C58ea52CFdf46f54a5843BA0075e0ae6cC57081",
      "txHash": "0x013e69be6716b98ff70ccc43ab81f26d222679f9aa560f5ebc4be1cc3553bfa2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mintSettings",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(MintSettings)5884_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:24"
          },
          {
            "label": "monster",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Monster)5887_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Registry)5836",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)218_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Registry)5836": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_struct(MintSettings)5884_storage": {
            "label": "struct IMonsters.MintSettings",
            "members": [
              {
                "label": "round",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supplyPerRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastMintedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Monster)5887_storage": {
            "label": "struct IMonsters.Monster",
            "members": [
              {
                "label": "transferCooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b9253d937b23d54dceca58a34fa50ad16f4f969503df6d852e16f8a287a8b531": {
      "address": "0x18895CDF0E3d99831DDce1119541C15023a8AE34",
      "txHash": "0x9f0916cd7f8af1bd23257dd758b901bdb98ae9fded06ecf31f51615fb8c93c51",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mintSettings",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(MintSettings)5884_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:24"
          },
          {
            "label": "monster",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Monster)5887_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Registry)5836",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)218_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Registry)5836": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_struct(MintSettings)5884_storage": {
            "label": "struct IMonsters.MintSettings",
            "members": [
              {
                "label": "round",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supplyPerRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastMintedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Monster)5887_storage": {
            "label": "struct IMonsters.Monster",
            "members": [
              {
                "label": "transferCooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ff617c191918283db893cb597f3c89377357a144b4b68028544f39d722c940cd": {
      "address": "0xb9B82f111044387df930741cA51A738F57EE172f",
      "txHash": "0x64c8e80d60027cc6fca46c3338e6876546a1a3c6faf32c57610d4810eac56a34",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mintSettings",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(MintSettings)5860_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:24"
          },
          {
            "label": "monster",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Monster)5863_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Registry)5812",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)218_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Registry)5812": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_struct(MintSettings)5860_storage": {
            "label": "struct IMonsters.MintSettings",
            "members": [
              {
                "label": "round",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supplyPerRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastMintedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Monster)5863_storage": {
            "label": "struct IMonsters.Monster",
            "members": [
              {
                "label": "transferCooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "598e4ec70a7feaa1d965fca2cba0332dea180a2b6ef802057240c55be6ee8c8a": {
      "address": "0xbB7B7405C89812f27b4CF313B57B3Fa8Fb63Df26",
      "txHash": "0xc40ad7ac92959b59e381a987268daef00627a4d7ce5ff130ac8841283f3c62a1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mintSettings",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(MintSettings)5872_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:24"
          },
          {
            "label": "monster",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Monster)5875_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Registry)5824",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)218_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Registry)5824": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_struct(MintSettings)5872_storage": {
            "label": "struct IMonsters.MintSettings",
            "members": [
              {
                "label": "round",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supplyPerRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastMintedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Monster)5875_storage": {
            "label": "struct IMonsters.Monster",
            "members": [
              {
                "label": "transferCooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5ae1335ad17e56ba0c57de741cbbe5f930f74a437f286b18ad8e97c673545b68": {
      "address": "0x867e222071d288B9bE8cCd9F6F9246026C1CCb74",
      "txHash": "0x0e96e3311c991e607d4aa7cb66ccabb2a77ba1f4c8102db364efee4f4f9069d0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mintSettings",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(MintSettings)5872_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:24"
          },
          {
            "label": "monster",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Monster)5875_storage",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Registry)5824",
            "contract": "Monsters",
            "src": "contracts/Monsters.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)218_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Registry)5824": {
            "label": "contract Registry",
            "numberOfBytes": "20"
          },
          "t_struct(MintSettings)5872_storage": {
            "label": "struct IMonsters.MintSettings",
            "members": [
              {
                "label": "round",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supplyPerRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastMintedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Monster)5875_storage": {
            "label": "struct IMonsters.Monster",
            "members": [
              {
                "label": "transferCooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ca9543e22408d1ab91d538a044f0e590ddba8e5dfea763593efd573f4dba8ba6": {
      "address": "0x4E53E7a299eed2D02045A70f25353B1F0b1Fe7C2",
      "txHash": "0xe2ccc312e547554ec945bddab881d653337f5b106ad95a205a0b36a48b7e46c5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)5848_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)5831,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)5831,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)5843_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)5831": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)5831,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)5831,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)5843_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)5843_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)5831",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)5848_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2af7c24547c128f19e093cf542a8758c77f7ea929865440413b3c4e6ce31df55": {
      "address": "0x904118Cbb52e29e831723da5c6E8FEeE16b134d6",
      "txHash": "0xfa7aa0c9b814ef175db4ae2dec015204b3e538fba67ed0987a5d6934d0dec68b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)8592_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)8575,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)8575,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)8587_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)8575": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)8575,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)8575,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)8587_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)8587_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)8575",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)8592_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "163023757b4907b1ddf57cd6c1f3b28cc329a7b89e0c7662089d913fc66eed19": {
      "address": "0xb70778dfBF2f0f8C12b66131Fe21598a7C490AD8",
      "txHash": "0x2ff63a3ddf05b0733c54f29304964913aaae3cf3b0542968f458b87da1a10523",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)8593_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)8576,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)8576,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)8588_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)8576": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)8576,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)8576,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)8588_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)8588_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)8576",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)8593_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d71a0109f82702073a64a6756fc230a2bd6f73e2d0fccd250f179e14ae56add2": {
      "address": "0xc54c875523304E41EF2067ac0BD15cA03A44B5e3",
      "txHash": "0x9512058603e30d9149eb9976a188a7da45326c7da1ec8b750d7c71dc570706ce",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)5863_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)5858_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)5846": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)5858_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)5858_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)5846",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)5863_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1706c38e92adc520b99ec708c67b46b4d0c54f59fd651de73e5327e1db0da473": {
      "address": "0xc65687025de93d9fed7508d4E824c14EC0779e01",
      "txHash": "0x4d13f171edd0369c2e52c2e2db86f984d4ab1e89782e482c831817b185558d19",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)5863_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)5858_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)5846": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)5846,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)5858_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)5858_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)5846",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)5863_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e357cf4a06718d97ef51cfc6e2b5e26f29890a58a5517bf578fedb6ce92f7cac": {
      "address": "0x1E47F9bb3e9ce2735c94502e881b0C30f39378F9",
      "txHash": "0xc1dfc563d7530891300447278424c4cefe8802f22bbaaa848e43367a6824fe29",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)5860_storage",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:18"
          },
          {
            "label": "monsterMultiplier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Evolution)5843,t_mapping(t_uint256,t_uint256))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:20"
          },
          {
            "label": "monsterImage",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Evolution)5843,t_mapping(t_uint256,t_string_storage))",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:21"
          },
          {
            "label": "monsterData",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Monster)5855_storage)",
            "contract": "MonstersMeta",
            "src": "contracts/MonstersMeta.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)5843": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Evolution)5843,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)5843,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IMonstersMeta.Evolution => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)5855_storage)": {
            "label": "mapping(uint256 => struct IMonstersMeta.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)5855_storage": {
            "label": "struct IMonstersMeta.Monster",
            "members": [
              {
                "label": "evo",
                "type": "t_enum(Evolution)5843",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(System)5860_storage": {
            "label": "struct IMonstersMeta.System",
            "members": [
              {
                "label": "registry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2b54d5e64bc1031560cb6bb5610127923f8fd9fc5a1dfcc0e4705c57e0ff3bb7": {
      "address": "0x82c2d411312ea6cbF4af13a93344c845Add441CB",
      "txHash": "0x8f7eca2d753014463032582c3508e26f2618eb868c731827aeb7ee2f0cf782db",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)7119_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:15"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Monster)7108_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:17"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7101_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:18"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_enum(Mode)7080,t_mapping(t_uint256,t_struct(Record)7087_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:19"
          },
          {
            "label": "gameCount",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(GameCount)7094_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Mode)7080": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(User)7101_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Mode)7080,t_mapping(t_uint256,t_struct(Record)7087_storage))": {
            "label": "mapping(enum IGame.Mode => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)7108_storage)": {
            "label": "mapping(uint256 => struct IGame.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7087_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameCount)7094_storage": {
            "label": "struct IGame.GameCount",
            "members": [
              {
                "label": "arena",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "circuit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sun",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Monster)7108_storage": {
            "label": "struct IGame.Monster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Record)7087_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "result",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(System)7119_storage": {
            "label": "struct IGame.System",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(User)7101_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c006ab38c171595598fbb73482328801933e4fa72eea3c90a3677ceece64ab41": {
      "address": "0x58AE12D158406d06d0d1345a9F6A7187Dd45ab68",
      "txHash": "0x2177343a247631c22d8b7b278c30569ee65242a258a9626e353008e0f9d90d13",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)7216_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:16"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Monster)7205_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:18"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7198_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:19"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7189_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Mode)7179": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7189_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7198_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)7205_storage)": {
            "label": "mapping(uint256 => struct IGame.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7189_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)7205_storage": {
            "label": "struct IGame.Monster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Record)7189_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7179",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(System)7216_storage": {
            "label": "struct IGame.System",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(User)7198_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "aad12102a18c50f96adf58c2ca6c10fff33d183ae09f5d62f6869f0e6c1d4328": {
      "address": "0x07B9BF6c5C486D76D8a4c8994Ebb43a9F9159398",
      "txHash": "0xf638141487155940d56fd55dca6c92ba209bff68621290163f03c43379fe37a9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(System)7246_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:16"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Monster)7235_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:18"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7228_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:19"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7219_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Mode)7209": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7219_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7228_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)7235_storage)": {
            "label": "mapping(uint256 => struct IGame.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7219_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(Monster)7235_storage": {
            "label": "struct IGame.Monster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Record)7219_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(System)7246_storage": {
            "label": "struct IGame.System",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(User)7228_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "446833b0a78a0676adcb612940bc147aa13c6e15f705f999990170ff0b2ce5c4": {
      "address": "0x69d7028B78666b972Ae36262126158864b86eA09",
      "txHash": "0xd00ca7072fc4b88130df0e28d15334cdfca4592aeb36b679e2ddd5a78938543e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(GameSystem)7370_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:21"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_enum(Evolution)7380,t_struct(GameMonster)7359_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:23"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7352_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:24"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7343_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)7380": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Mode)7333": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7343_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7352_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)7380,t_struct(GameMonster)7359_storage)": {
            "label": "mapping(enum IMonstersMeta.Evolution => struct IGame.GameMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7343_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameMonster)7359_storage": {
            "label": "struct IGame.GameMonster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GameSystem)7370_storage": {
            "label": "struct IGame.GameSystem",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Record)7343_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7333",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)7352_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7fefc0caadd9231189bcb6ed40fd750bc46c31c07c8c80246728c578cb7ebb37": {
      "address": "0xEe17A325C701242Ee830a72f0eA19865c818b1C6",
      "txHash": "0x07ef62b8d1af4664d8ee9ffb4a8baa56d0b35f36c8ece6b2af7d3c1117fefcac",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(GameSystem)7260_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:21"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_enum(Evolution)7270,t_struct(GameMonster)7249_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:23"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7242_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:24"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7233_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)7270": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Mode)7223": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7233_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7242_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)7270,t_struct(GameMonster)7249_storage)": {
            "label": "mapping(enum IMonstersMeta.Evolution => struct IGame.GameMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7233_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameMonster)7249_storage": {
            "label": "struct IGame.GameMonster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GameSystem)7260_storage": {
            "label": "struct IGame.GameSystem",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Record)7233_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7223",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)7242_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6a509cd1f0aaf022da8adebd8d3f09794e9d4fd1b2a01afb6a61b925a9473bf8": {
      "address": "0x5f39EA3ec86ca752B86e3c82cd9fcBd98EC0AB56",
      "txHash": "0x388f6b62c74cb39d6c45b69849750e88e8b01aedefc9574bb10f91c1a2e95fa1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(GameSystem)7272_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:21"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_enum(Evolution)7282,t_struct(GameMonster)7261_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:23"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7254_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:24"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7245_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)7282": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Mode)7235": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7245_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7254_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)7282,t_struct(GameMonster)7261_storage)": {
            "label": "mapping(enum IMonstersMeta.Evolution => struct IGame.GameMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7245_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameMonster)7261_storage": {
            "label": "struct IGame.GameMonster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GameSystem)7272_storage": {
            "label": "struct IGame.GameSystem",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Record)7245_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7235",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)7254_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bb71ff290414f9ce3e581f86c878e4ed5ba0fbc26855f2658b7ee6d0b3d96f53": {
      "address": "0xfc006e0b121a648379069EB32702cdB69e830759",
      "txHash": "0x0e426210daca36a280e95e1dbacd17e3f5ad5b00445f4e9f9ece29ed2393577a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(GameSystem)7269_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:21"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_enum(Evolution)7279,t_struct(GameMonster)7258_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:23"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7251_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:24"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7242_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)7279": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Mode)7232": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7242_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7251_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)7279,t_struct(GameMonster)7258_storage)": {
            "label": "mapping(enum IMonstersMeta.Evolution => struct IGame.GameMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7242_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameMonster)7258_storage": {
            "label": "struct IGame.GameMonster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GameSystem)7269_storage": {
            "label": "struct IGame.GameSystem",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Record)7242_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7232",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)7251_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c0010c827d37d6fccd411c798b098b4d0bc2a905a43382836ca0b2b5fadeba07": {
      "address": "0x746515aBfcaaE94044c41588b0E79e5Ab402f3E5",
      "txHash": "0x91e3973ab28c5f57738218e502e558e77288ecf9c0600097d4dae0c2da39648a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(GameSystem)7269_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:21"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_enum(Evolution)7279,t_struct(GameMonster)7258_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:23"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7251_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:24"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7242_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)7279": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Mode)7232": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7242_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7251_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)7279,t_struct(GameMonster)7258_storage)": {
            "label": "mapping(enum IMonstersMeta.Evolution => struct IGame.GameMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7242_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameMonster)7258_storage": {
            "label": "struct IGame.GameMonster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GameSystem)7269_storage": {
            "label": "struct IGame.GameSystem",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Record)7242_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7232",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)7251_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "33c5c93296daf3941129713a55efb5f748464b85c65808c7ea609f704279e30f": {
      "address": "0x5717fBFA5a60b2B50e89877162d0446659572C91",
      "txHash": "0x31540c075ef46e9cb3d28a4910553af985de1d9765e02a9ae899e6845ddc8b15",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "system",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(GameSystem)7269_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:21"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_enum(Evolution)7279,t_struct(GameMonster)7258_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:23"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(User)7251_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:24"
          },
          {
            "label": "gameRecord",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7242_storage))",
            "contract": "Game",
            "src": "contracts/Game.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)58_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(Evolution)7279": {
            "label": "enum IMonstersMeta.Evolution",
            "members": [
              "SPARKY",
              "SHADOW",
              "FROST",
              "NIMBUS",
              "ZEPHYR",
              "MONSTAX"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Mode)7232": {
            "label": "enum IGame.Mode",
            "members": [
              "ARENA",
              "CIRCUIT",
              "SUN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Record)7242_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IGame.Record))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)7251_storage)": {
            "label": "mapping(address => struct IGame.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Evolution)7279,t_struct(GameMonster)7258_storage)": {
            "label": "mapping(enum IMonstersMeta.Evolution => struct IGame.GameMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Record)7242_storage)": {
            "label": "mapping(uint256 => struct IGame.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(GameMonster)7258_storage": {
            "label": "struct IGame.GameMonster",
            "members": [
              {
                "label": "winrate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "loseReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GameSystem)7269_storage": {
            "label": "struct IGame.GameSystem",
            "members": [
              {
                "label": "contractRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxEnergy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uplinePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isUndermaintenance",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Record)7242_storage": {
            "label": "struct IGame.Record",
            "members": [
              {
                "label": "mode",
                "type": "t_enum(Mode)7232",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "result",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)7251_storage": {
            "label": "struct IGame.User",
            "members": [
              {
                "label": "earnings",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimeOfPlay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
